<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="">
    
    {% assign primary_sort_collection = collection %}
    {% if collection.metafields.sort_primary.collection_handle %}
      {% assign primary_sort_collection = collections[collection.metafields.sort_primary.collection_handle] %}
    {% endif %}
    {% if template contains "collection" and primary_sort_collection %}
      <link rel="canonical" href="{{ shop.url }}{{ primary_sort_collection.url }}{% if current_tags and current_tags.first %}/{{ current_tags.first }}{% endif %}{% if current_tags and current_tags[1] %}+{{ current_tags[1] }}{% endif %}{% if current_page > 1 %}?page={{ current_page }}{% endif %}" />
    {% else %}
      <link rel="canonical" href="{{ canonical_url }}" />
    {% endif %}

    <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>

    {%- if settings.favicon != blank -%}
      <link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
    {%- endif -%}

    {%- unless settings.type_header_font.system? and settings.type_body_font.system? and settings.type_use_custom == true -%}
      <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
    {%- endunless -%}

    {%- if settings.gtm_head != blank -%} 
      {{ settings.gtm_head }}
    {%- endif -%}

    <title>
      {{ page_title }}
      {%- if current_tags %} &ndash; tagged "{{ current_tags | join: ', ' }}"{% endif -%}
      {%- if current_page != 1 %} &ndash; Page {{ current_page }}{% endif -%}
      {%- unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless -%}
    </title>

    {% if page_description %}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}

    {% render 'meta-tags' %}

    {{ content_for_header }}

    {%- render 'variables' -%}

    {% style %}
      *,
      *::before,
      *::after {
        box-sizing: inherit;
      }

      html {
        box-sizing: border-box;
        font-size: var(--base-font-size);
        height: 100%;
      }

      body {
        display: grid;
        grid-template-rows: auto auto 1fr auto;
        grid-template-columns: 100%;
        min-height: 100%;
        margin: 0;
        font-size: var(--base-font-size);
        line-height: calc(1 + 0.8 / var(--font-body-scale));
        font-family: var(--font-body-family);
        font-style: var(--font-body-style);
        font-weight: var(--font-body-weight);
      }

      @media screen and (max-width: 749px) {
        body {
          font-size: 1rem;
        }
      }
    {% endstyle %} 

    {{ 'base.css' | asset_url | stylesheet_tag }}

    {{ 'theme.css' | asset_url | stylesheet_tag }}

    <script src="{{ 'jquery-3.6.0.min.js' | asset_url }}"></script>
    
    {%- unless settings.type_body_font.system? and settings.type_use_custom == true -%}
      <link rel="preload" as="font" href="{{ settings.type_body_font | font_url }}" type="font/woff2" crossorigin>
    {%- endunless -%}
    {%- unless settings.type_header_font.system? and settings.type_use_custom == true -%}
      <link rel="preload" as="font" href="{{ settings.type_header_font | font_url }}" type="font/woff2" crossorigin>
    {%- endunless -%}

    {%- if settings.predictive_search_enabled -%}
      <link rel="stylesheet" href="{{ 'component-predictive-search.css' | asset_url }}" media="print" onload="this.media='all'">
    {%- endif -%}

    <script>document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
    if (Shopify.designMode) {
      document.documentElement.classList.add('shopify-design-mode');
    }
    </script>

    {% section 'filter-menu-settings' %}

    <script src="{{ 'vendor.js' | asset_url }}"></script>

  </head>

  <body class="gradient template-{{ request.page_type | handle }}">
    {%- if settings.gtm_body != blank -%} 
      {{ settings.gtm_body }}
    {%- endif -%}

    <a class="skip-to-content-link button visually-hidden" href="#MainContent">
      {{ "accessibility.skip_to_text" | t }}
    </a>
    <{% if settings.enable_sticky_header %}sticky-header{% else %}div{% endif %} id="header">
      {% section 'announcement-bar' %}
      {% section 'header' %}
    </{% if settings.enable_sticky_header %}sticky-header{% else %}div{% endif %} > 
    
    <main id="MainContent" class="content-for-layout focus-none" role="main" tabindex="-1">
      {{ content_for_layout }}
    </main>

    {% section 'bottom-banner-action' %}

    {% section 'footer' %}

    {% section 'footer-bottom' %}

    <ul hidden>
      <li id="a11y-refresh-page-message">{{ 'accessibility.refresh_page' | t }}</li>
    </ul>

    <script src="{{ 'global.js' | asset_url }}" defer="defer"></script>
    
    <script src="{{ 'custom.js' | asset_url }}" defer="defer"></script>


    <script src="{{ 'products--get-variants.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'collection--infinite-load.js' | asset_url }}" defer="defer"></script>

    {%- if settings.enable_sticky_header -%}
      <script>
      class StickyHeader extends HTMLElement {
        constructor() {
          super();
        }
    
        connectedCallback() {
          this.header = document.getElementById('header');
          this.headerBounds = {};
          this.currentScrollTop = 0;
          this.preventReveal = false;
          this.predictiveSearch = this.querySelector('predictive-search');
    
          this.onScrollHandler = this.onScroll.bind(this);
          this.hideHeaderOnScrollUp = () => this.preventReveal = true;
    
          this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
          window.addEventListener('scroll', this.onScrollHandler, false);
    
          this.createObserver();
        }
    
        disconnectedCallback() {
          this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
          window.removeEventListener('scroll', this.onScrollHandler);
        }
    
        createObserver() {
          let observer = new IntersectionObserver((entries, observer) => {
            this.headerBounds = entries[0].intersectionRect;
            observer.disconnect();
          });
    
          observer.observe(this.header);
        }
    
        onScroll() {
          const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    
          if (this.predictiveSearch && this.predictiveSearch.isOpen) return;
    
          if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
            requestAnimationFrame(this.hide.bind(this));
          } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
            if (!this.preventReveal) {
              requestAnimationFrame(this.reveal.bind(this));
            } else {
              window.clearTimeout(this.isScrolling);
    
              this.isScrolling = setTimeout(() => {
                this.preventReveal = false;
              }, 66);
    
              requestAnimationFrame(this.hide.bind(this));
            }
          } else if (scrollTop <= this.headerBounds.top) {
            requestAnimationFrame(this.reset.bind(this));
          }
    
    
          this.currentScrollTop = scrollTop;
        }
    
        hide() {
          this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
          this.closeMenuDisclosure();
          this.closeSearchModal();
        }
    
        reveal() {
          this.header.classList.add('shopify-section-header-sticky', 'animate');
          this.header.classList.remove('shopify-section-header-hidden');
        }
    
        reset() {
          this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
        }
    
        closeMenuDisclosure() {
          this.disclosures = this.disclosures || this.header.querySelectorAll('details-disclosure');
          this.disclosures.forEach(disclosure => disclosure.close());
        }
    
        closeSearchModal() {
          this.searchModal = this.searchModal || this.header.querySelector('details-modal');
          this.searchModal.close(false);
        }
      }
    
      customElements.define('sticky-header', StickyHeader);
    </script>
    {%- endif -%}

    <script>
      window.addEventListener('DOMContentLoaded', () => {
        imageMapResize();
      });

      document.addEventListener("shopify:section:load", function(event) {
        imageMapResize();
      });
    </script> 

    <script>
      window.shopUrl = '{{ request.origin }}';
      window.routes = {
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}'
      };

      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`
      }

      window.variantStrings = {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
      }

      window.accessibilityStrings = {
        imageAvailable: `{{ 'products.product.media.image_available' | t: index: '[index]' }}`,
        shareSuccess: `{{ 'general.share.success_message' | t }}`,
        pauseSlideshow: `{{ 'sections.slideshow.pause_slideshow' | t }}`,
        playSlideshow: `{{ 'sections.slideshow.play_slideshow' | t }}`,
      }
    </script> 

    {%- if settings.predictive_search_enabled -%}
      <script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}
  </body>
</html>
